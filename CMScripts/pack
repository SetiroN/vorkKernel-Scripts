#!/bin/bash

if [ -f /opt/vorkKernel-Scripts/CMScripts/Tools/ccache.txt ]; then	
	export ARM_EABI="ccache /opt/vorkChain/toolchain/bin/arm-eabi-"
	export USE_CCACHE=1
else 
	export ARM_EABI=/opt/vorkChain/toolchain/bin/arm-eabi-
fi
export BUILD_DIR=/home/benee/Dropbox/Public
export SCRIPT_DIR=/opt/vorkKernel-Scripts
export SOURCE_DIR=/opt/vorkKernel-LG-o2x

rm $SCRIPT_DIR/CMScripts/Tools/ramdisk-boot
rm $SCRIPT_DIR/CMScripts/Tools/newBoot.img
DIR=$PWD
NOW=$(date +"%d%m%y")
echo "Do you want to build a release or a test version?"
echo "1 for Release, 2 for Test"
read BUILD
case $BUILD in
	1) signed_file=vorkKernel-"$NOW".zip
	   export release=release 
	;;
	2) signed_file=vorkKernel-LGP990.zip
	   export release=test
	;;
esac 
clear
. Scripts/move_ramdisk.sh
echo "compiling kernel"
sed -i 's/#define USE_FAKE_SHMOO_PSYCHO/\/\/#define USE_FAKE_SHMOO_PSYCHO/' $SOURCE_DIR/arch/arm/mach-tegra/nvrm/core/common/nvrm_clocks_limits.c
. Scripts/kernelcompile.sh
mv $SOURCE_DIR/arch/arm/boot/zImage $SCRIPT_DIR/CMScripts/Awesome.zip/tmp/vorkKernel/Images/zImage

sed -i 's/\/\/#define USE_FAKE_SHMOO_PSYCHO/#define USE_FAKE_SHMOO_PSYCHO/' $SOURCE_DIR/arch/arm/mach-tegra/nvrm/core/common/nvrm_clocks_limits.c
. Scripts/kernelcompile.sh
if [ "$release" == "release" ]; then
cp $SOURCE_DIR/arch/arm/boot/zImage $SCRIPT_DIR/CMScripts/Awesome.zip/tmp/vorkKernel/Images/zImageBC
mv $SOURCE_DIR/arch/arm/boot/zImage $SCRIPT_DIR/CMScripts/Tools/zImage
. Scripts/update.zip_creator.sh
else
mv $SOURCE_DIR/arch/arm/boot/zImage $SCRIPT_DIR/CMScripts/Awesome.zip/tmp/vorkKernel/Images/zImageBC
fi

# 1080p Version
echo "Compiling 1080p version"
cd $SOURCE_DIR
git revert -n 9e7ff480926d1c81ae10
cd $SCRIPT_DIR/CMScripts

sed -i 's/#define USE_FAKE_SHMOO_PSYCHO/\/\/#define USE_FAKE_SHMOO_PSYCHO/' $SOURCE_DIR/arch/arm/mach-tegra/nvrm/core/common/nvrm_clocks_limits.c
. Scripts/kernelcompile.sh
mv $SOURCE_DIR/arch/arm/boot/zImage $SCRIPT_DIR/CMScripts/Awesome.zip/tmp/vorkKernel/Images/1080p/zImage

sed -i 's/\/\/#define USE_FAKE_SHMOO_PSYCHO/#define USE_FAKE_SHMOO_PSYCHO/' $SOURCE_DIR/arch/arm/mach-tegra/nvrm/core/common/nvrm_clocks_limits.c
. Scripts/kernelcompile.sh
mv $SOURCE_DIR/arch/arm/boot/zImage $SCRIPT_DIR/CMScripts/Awesome.zip/tmp/vorkKernel/Images/1080p/zImageBC

# add 64Mb hack back (silent)
cd $SOURCE_DIR
git cherry-pick -n 9e7ff480926d1c81ae10
cd $SCRIPT_DIR/CMScripts
clear

echo "Compiling modules"
rm -rf $SCRIPT_DIR/CMScripts/Awesome.zip/system/lib/modules/*
cd $SOURCE_DIR
make ARCH=arm CROSS_COMPILE="$ARM_EABI" INSTALL_MOD_PATH=$SCRIPT_DIR/CMScripts/Awesome.zip/system modules_install

if [ "$release" == "release" ]; then
make ARCH=arm CROSS_COMPILE="$ARM_EABI" INSTALL_MOD_PATH=$SCRIPT_DIR/CMScripts/Update.zip/system modules_install
fi

for module in `find $SCRIPT_DIR/CMScripts/Awesome.zip/system/lib/modules/$VERSION/kernel/ -name *.ko`
do
    cp $module $SCRIPT_DIR/CMScripts/Awesome.zip/system/lib/modules/
done
rm -r $SCRIPT_DIR/CMScripts/Awesome.zip/system/lib/modules/$VERSION

if [ "$release" == "release" ]; then
for module in `find $SCRIPT_DIR/CMScripts/Update.zip/system/lib/modules/$VERSION/kernel/ -name *.ko`
do
    cp $module $SCRIPT_DIR/CMScripts/Update.zip/system/lib/modules/
done
rm -r $SCRIPT_DIR/CMScripts/Update.zip/system/lib/modules/$VERSION
fi

cd $SCRIPT_DIR/CMScripts/Awesome.zip

echo Making update.zip ...
zip -r -y -q update *
echo
echo update.zip created

mv update.zip $signed_file

if [ "$release" == "release" ]; then
        if [ -d $BUILD_DIR/LG\ P990 ]; then
          mv $signed_file $BUILD_DIR/LG\ P990/$signed_file
        else
          mkdir $BUILD_DIR/LG\ P990
          mv $signed_file $BUILD_DIR/LG\ P990/$signed_file
        fi
else
        if [ -d $BUILD_DIR/LGTEST ]; then
          mv $signed_file $BUILD_DIR/LGTEST/$signed_file
        else
          mkdir $BUILD_DIR/LGTEST
          mv $signed_file $BUILD_DIR/LGTEST/$signed_file
        fi
fi

if [ "$release" == "release" ]; then
python $SCRIPT_DIR/CMScript/Scripts/pyndexer/pyndexer.py
fi

if [ "$release" == "release" ]; then
cd $SCRIPT_DIR/CMScripts/Update.zip

echo Making update.zip ...
zip -r -y -q update *
echo
echo update.zip created

mv update.zip $signed_file

	if [ -d $BUILD_DIR/LG\ P990 ]; then
		mv $signed_file $BUILD_DIR/LGP990zips/$signed_file
		else
			mkdir $BUILD_DIR/LGP990zips
			mv $signed_file $BUILD_DIR/LGP990zips/$signed_file
	fi
fi

cd $SCRIPT_DIR/CMScripts

echo "Root password for permission fixing"
su -c"chmod -R root:vorkTeam /opt; chmod -R 774 /opt"
